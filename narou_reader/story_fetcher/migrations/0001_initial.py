# Generated by Django 5.0 on 2024-06-29 06:46

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=10, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Story',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ncode', models.CharField(max_length=10, unique=True)),
                ('title', models.CharField(max_length=255)),
                ('author', models.CharField(max_length=100)),
                ('synopsis', models.TextField()),
                ('keywords', models.TextField()),
                ('first_published', models.DateTimeField()),
                ('last_updated', models.DateTimeField()),
                ('total_characters', models.IntegerField()),
                ('genre', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='story_fetcher.genre')),
                ('tags', models.ManyToManyField(to='story_fetcher.tag')),
            ],
        ),
        migrations.CreateModel(
            name='DailyRanking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('daily_point', models.IntegerField()),
                ('rank', models.IntegerField()),
                ('story', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='story_fetcher.story')),
            ],
            options={
                'unique_together': {('story', 'date')},
            },
        ),
    ]
